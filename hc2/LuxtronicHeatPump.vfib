{"name":"LuxtronicHeatPump","type":"virtual_device","properties":{"deviceIcon":0,"currentIcon":"0","log":"-5.5 C","logTemp":"TxtGreen","mainLoop":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\n\nlocal HC2 = Net.FHttp(ip, port)  \nlocal response, status, errorcode = HC2:GET('/luxtronic/calculations');\n\nif tonumber(status) == 200 then\n  fibaro:debug(\"Parsing data...\")\n  local responseTable = json.decode(response);\n  fibaro:log(responseTable.ID_WEB_Temperatur_TA .. ' C');\n  fibaro:debug(responseTable.ID_WEB_Temperatur_TA)\n  local sinceOrIn = responseTable.ID_WEB_HauptMenuStatus_Zeile2 .. ' ' .. responseTable.ID_WEB_HauptMenuStatus_Zeit\n  \n  fibaro:call(deviceId, \"setProperty\", \"ui.AmbientTemperatureLabel.value\", responseTable.ID_WEB_Temperatur_TA);\n  fibaro:call(deviceId, \"setProperty\", \"ui.Status1Label.value\", responseTable.ID_WEB_HauptMenuStatus_Zeile1);\n  fibaro:call(deviceId, \"setProperty\", \"ui.Status3Label.value\", responseTable.ID_WEB_HauptMenuStatus_Zeile3);\n  fibaro:call(deviceId, \"setProperty\", \"ui.Status2Label.value\", sinceOrIn);\nend\n\nlocal response, status, errorcode = HC2:GET('/luxtronic/parameters');\nif tonumber(status) == 200 then\n  fibaro:debug(\"Parsing data...\")\n  local responseTable = json.decode(response);\n  fibaro:debug(responseTable.ID_Ba_Hz_akt)\n  -- Heating\n  local heatingSliderValue = 50 + (tonumber(responseTable.ID_Einst_WK_akt) * 10)\n  local heatingMode = responseTable.ID_Ba_Hz_akt .. ' ' .. responseTable.ID_Einst_WK_akt .. 'C'\n  fibaro:call(deviceId, \"setProperty\", \"ui.HeatingLabel.value\", heatingMode);\n  fibaro:call(deviceId, \"setProperty\", \"ui.HeatingSlider.value\", heatingSliderValue);\n  -- Hot Water\n  local hotWaterSliderValue = tonumber(responseTable.ID_Einst_BWS_akt)\n  local hotWaterMode = responseTable.ID_Ba_Bw_akt .. ' ' .. responseTable.ID_Einst_BWS_akt .. 'C'\n  fibaro:debug(hotWaterSliderValue)\n  fibaro:call(deviceId, \"setProperty\", \"ui.HotWaterLabel.value\", hotWaterMode);\n  fibaro:call(deviceId, \"setProperty\", \"ui.HotWaterSlider.value\", hotWaterSliderValue);\nend\n\nfibaro:debug('-----------')\nfibaro:sleep(15000)","ui.AmbientTemperatureLabel.value":"-5.5","ui.HeatingLabel.value":"AUTOMATIC 0.1C","ui.HeatingSlider.value":51,"ui.HotWaterLabel.value":"AUTOMATIC 50.0C","ui.HotWaterSlider.value":50,"ui.Status1Label.value":"HP is running","ui.Status2Label.value":"since 1h 25m 42s","ui.Status3Label.value":"heating mode","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Amb. Temp.","name":"AmbientTemperatureLabel","favourite":false,"main":false}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Status 1","name":"Status1Label","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Status 2","name":"Status2Label","favourite":false,"main":false}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"Status 3","name":"Status3Label","favourite":false,"main":false}]},{"type":"label","elements":[{"id":5,"lua":false,"waitForResponse":false,"caption":"Heating","name":"HeatingLabel","favourite":false,"main":false}]},{"type":"button","elements":[{"id":6,"lua":true,"waitForResponse":false,"caption":"Auto","name":"ButtonHeatAuto","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/heating/Mode', 'AUTOMATIC');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false},{"id":7,"lua":true,"waitForResponse":false,"caption":"Party","name":"ButtonHeatParty","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/heating/Mode', 'PARTY');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false},{"id":8,"lua":true,"waitForResponse":false,"caption":"Hol.","name":"ButtonHeatHoliday","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/heating/Mode', 'HOLIDAY');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false},{"id":9,"lua":true,"waitForResponse":false,"caption":"Off","name":"ButtonHeatOff","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/heating/Mode', 'OFF');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":10,"lua":true,"waitForResponse":false,"caption":"Delta (-5 / +5)","name":"HeatingSlider","msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\n\nsliderValue = (tonumber(_sliderValue_) - 50) / 10\n\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/heating/TemperatureDelta', sliderValue);\nfibaro:debug(status)","buttonIcon":0,"value":51,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":11,"lua":false,"waitForResponse":false,"caption":"Hot Water","name":"HotWaterLabel","favourite":false,"main":false}]},{"type":"button","elements":[{"id":12,"lua":true,"waitForResponse":false,"caption":"Auto","name":"ButtonDHWtAuto","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/hotwater/Mode', 'AUTOMATIC');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false},{"id":13,"lua":true,"waitForResponse":false,"caption":"Party","name":"ButtonDHWParty","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/hotwater/Mode', 'PARTY');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false},{"id":14,"lua":true,"waitForResponse":false,"caption":"Hol.","name":"ButtonDHWHol","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/hotwater/Mode', 'HOLIDAY');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false},{"id":15,"lua":true,"waitForResponse":false,"caption":"Off","name":"ButtonDHWOff","empty":false,"msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/hotwater/Mode', 'OFF');\nfibaro:debug(status)","buttonIcon":0,"favourite":false,"main":false}]},{"type":"slider","elements":[{"id":16,"lua":true,"waitForResponse":false,"caption":"Target 30-50C","name":"HotWaterSlider","msg":"local deviceId = fibaro:getSelfId();\nlocal ip = fibaro:get(deviceId, \"IPAddress\");\nlocal port = fibaro:get(deviceId, \"TCPPort\");\n\n-- slider value is should be from 30 to 50 in this case.\nlocal value = tonumber(_sliderValue_)\nif value < 30 then\n  value = 30\nelseif value > 50 then\n  value = 50\nend\nfibaro:call(deviceId, \"setProperty\", \"ui.HotWaterSlider.value\", value);\nlocal httpClient = Net.FHttp(ip, port);\nlocal response, status, errorCode = httpClient:PUT('/luxtronic/hotwater/TargetTemperature', value);","buttonIcon":0,"value":50,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}